/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CartDetailPanel.java
 *
 * Created on 14/03/2011, 12:08:59 AM
 */

package com.stayprime.basestation2.ui.modules;

import com.aeben.golfclub.utils.Formatters;
import com.stayprime.hibernate.entities.CartInfo;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.jdesktop.application.Action;

/**
 *
 * @author benjamin
 */
public class CartDetailPanel extends javax.swing.JPanel {
    private static final Logger log = LoggerFactory.getLogger(CartDetailPanel.class);
    private final DocumentListener documentListener;
    
    public enum Operation {ADD, EDIT, DELETE};

    protected boolean cartDefinitionChanged = false;
    public static final String PROP_CARTDEFINITIONCHANGED = "cartDefinitionChanged";

    private DoneCallback callback;

    /** Creates new form CartDetailPanel */
    public CartDetailPanel() {
        initComponents();
        documentListener = new DocumentChangeListener();
    }

    public void setCartDetailCallback(DoneCallback callback) {
        this.callback = callback;
    }

    public void setCartStatus(CartInfo status) {
        if(status != null) {
            cartNumberField.setText(String.valueOf(status.getCartNumber()));
            macAddressField.setText(status.getMacAddress());
            cartLocationField.setText(String.valueOf(status.getPosition()));
            headingField.setText(status.getHeading() == null? "" : Formatters.getHeadingString(status.getHeading()));
            playingHoleField.setText(status.getPlayingHole() == null? "": status.getPlayingHole().toString());
            paceOfPlayField.setText(status.getPaceOfPlay() == null? "": Formatters.getPaceOfPlayString(status.getPaceOfPlay()));
            statusUpdatedField.setText(status.getLocationLastUpdated() == null? "": Formatters.shortDateTimeFormat.format(status.getLocationLastUpdated()));
            cartAppModeField.setText(status.getCartMode() == null? "N/A": Formatters.getCartAppMode(status.getCartMode()));
        }
        else {
            cartNumberField.setText(null);
            macAddressField.setText(null);
            cartLocationField.setText(null);
            headingField.setText(null);
            playingHoleField.setText(null);
            paceOfPlayField.setText(null);
            statusUpdatedField.setText(null);
            cartAppModeField.setText(null);
        }
    }

    public boolean exitScreen() {
        if (isCartDefinitionChanged()) {
            int result = JOptionPane.showConfirmDialog(this, "Do you want to save the changes \nto this cart definition?");

            if (result == JOptionPane.CANCEL_OPTION) {
                return false;
            }
            else if (result == JOptionPane.YES_OPTION) {
                //logic for saving any changes
                return false;
            }
            else {
                setCartDefinitionChanged(false);
                return true;
            }
        }
        else {
            return true;
        }
    }

    public boolean isCartDefinitionChanged() {
        return cartDefinitionChanged;
    }

    public void setCartDefinitionChanged(boolean cartDefinitionChanged) {
        boolean oldCartDefinitionChanged = this.cartDefinitionChanged;
        this.cartDefinitionChanged = cartDefinitionChanged;
        firePropertyChange(PROP_CARTDEFINITIONCHANGED, oldCartDefinitionChanged, cartDefinitionChanged);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saveButton = new javax.swing.JButton();
        operationLabel = new javax.swing.JLabel();
        titleSeparator = new javax.swing.JSeparator();
        cartNumberLabel = new javax.swing.JLabel();
        cartNumberField = new javax.swing.JTextField();
        macAddressLabel = new javax.swing.JLabel();
        macAddressField = new javax.swing.JTextField();
        cartLocationLabel = new javax.swing.JLabel();
        cartLocationField = new javax.swing.JTextField();
        playingHoleLabel = new javax.swing.JLabel();
        playingHoleField = new javax.swing.JTextField();
        statusUpdatedLabel = new javax.swing.JLabel();
        statusUpdatedField = new javax.swing.JTextField();
        headingLabel = new javax.swing.JLabel();
        paceOfPlayLabel = new javax.swing.JLabel();
        cartAppModeLabel = new javax.swing.JLabel();
        paceOfPlayField = new javax.swing.JTextField();
        cartAppModeField = new javax.swing.JTextField();
        headingField = new javax.swing.JTextField();
        buttonsPanel = new org.jdesktop.swingx.JXPanel();
        cancelButton = new javax.swing.JButton();

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(CartDetailPanel.class, this);
        saveButton.setAction(actionMap.get("saveAction")); // NOI18N
        saveButton.setName("saveButton"); // NOI18N

        setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        setName("Form"); // NOI18N

        operationLabel.setFont(operationLabel.getFont().deriveFont(operationLabel.getFont().getStyle() | java.awt.Font.BOLD, operationLabel.getFont().getSize()+5));
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(CartDetailPanel.class);
        operationLabel.setText(resourceMap.getString("operationLabel.text")); // NOI18N
        operationLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(12, 12, 6, 12));
        operationLabel.setName("operationLabel"); // NOI18N

        titleSeparator.setName("titleSeparator"); // NOI18N

        cartNumberLabel.setText(resourceMap.getString("cartNumberLabel.text")); // NOI18N
        cartNumberLabel.setName("cartNumberLabel"); // NOI18N

        cartNumberField.setColumns(6);
        cartNumberField.setText(resourceMap.getString("cartNumberField.text")); // NOI18N
        cartNumberField.setName("cartNumberField"); // NOI18N

        macAddressLabel.setText(resourceMap.getString("macAddressLabel.text")); // NOI18N
        macAddressLabel.setName("macAddressLabel"); // NOI18N

        macAddressField.setColumns(14);
        macAddressField.setText(resourceMap.getString("macAddressField.text")); // NOI18N
        macAddressField.setName("macAddressField"); // NOI18N

        cartLocationLabel.setText(resourceMap.getString("cartLocationLabel.text")); // NOI18N
        cartLocationLabel.setName("cartLocationLabel"); // NOI18N

        cartLocationField.setEditable(false);
        cartLocationField.setColumns(14);
        cartLocationField.setText(resourceMap.getString("cartLocationField.text")); // NOI18N
        cartLocationField.setName("cartLocationField"); // NOI18N

        playingHoleLabel.setText(resourceMap.getString("playingHoleLabel.text")); // NOI18N
        playingHoleLabel.setName("playingHoleLabel"); // NOI18N

        playingHoleField.setEditable(false);
        playingHoleField.setColumns(14);
        playingHoleField.setText(resourceMap.getString("playingHoleField.text")); // NOI18N
        playingHoleField.setName("playingHoleField"); // NOI18N

        statusUpdatedLabel.setText(resourceMap.getString("statusUpdatedLabel.text")); // NOI18N
        statusUpdatedLabel.setName("statusUpdatedLabel"); // NOI18N

        statusUpdatedField.setEditable(false);
        statusUpdatedField.setColumns(14);
        statusUpdatedField.setText(resourceMap.getString("statusUpdatedField.text")); // NOI18N
        statusUpdatedField.setName("statusUpdatedField"); // NOI18N

        headingLabel.setText(resourceMap.getString("headingLabel.text")); // NOI18N
        headingLabel.setName("headingLabel"); // NOI18N

        paceOfPlayLabel.setText(resourceMap.getString("paceOfPlayLabel.text")); // NOI18N
        paceOfPlayLabel.setName("paceOfPlayLabel"); // NOI18N

        cartAppModeLabel.setText(resourceMap.getString("cartAppModeLabel.text")); // NOI18N
        cartAppModeLabel.setName("cartAppModeLabel"); // NOI18N

        paceOfPlayField.setEditable(false);
        paceOfPlayField.setColumns(5);
        paceOfPlayField.setText(resourceMap.getString("paceOfPlayField.text")); // NOI18N
        paceOfPlayField.setName("paceOfPlayField"); // NOI18N

        cartAppModeField.setEditable(false);
        cartAppModeField.setColumns(12);
        cartAppModeField.setName("cartAppModeField"); // NOI18N

        headingField.setEditable(false);
        headingField.setColumns(3);
        headingField.setText(resourceMap.getString("headingField.text")); // NOI18N
        headingField.setName("headingField"); // NOI18N

        buttonsPanel.setName("buttonsPanel"); // NOI18N
        buttonsPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        cancelButton.setAction(actionMap.get("cancelOperation")); // NOI18N
        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        buttonsPanel.add(cancelButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleSeparator)
            .addComponent(operationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(buttonsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusUpdatedLabel)
                    .addComponent(playingHoleLabel)
                    .addComponent(cartLocationLabel)
                    .addComponent(macAddressLabel)
                    .addComponent(cartNumberLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cartNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(playingHoleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(paceOfPlayLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(statusUpdatedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cartAppModeLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cartLocationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(headingLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(headingField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cartAppModeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paceOfPlayField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(macAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(operationLabel)
                .addGap(0, 0, 0)
                .addComponent(titleSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cartNumberLabel)
                    .addComponent(cartNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(macAddressLabel)
                    .addComponent(macAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cartLocationLabel)
                    .addComponent(cartLocationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(headingLabel)
                    .addComponent(headingField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playingHoleLabel)
                    .addComponent(playingHoleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paceOfPlayLabel)
                    .addComponent(paceOfPlayField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusUpdatedLabel)
                    .addComponent(statusUpdatedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cartAppModeLabel)
                    .addComponent(cartAppModeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    @Action
    public void cancelOperation() {
        setCartDefinitionChanged(false);
        if (callback != null) {
            callback.done();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXPanel buttonsPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField cartAppModeField;
    private javax.swing.JLabel cartAppModeLabel;
    private javax.swing.JTextField cartLocationField;
    private javax.swing.JLabel cartLocationLabel;
    private javax.swing.JTextField cartNumberField;
    private javax.swing.JLabel cartNumberLabel;
    private javax.swing.JTextField headingField;
    private javax.swing.JLabel headingLabel;
    private javax.swing.JTextField macAddressField;
    private javax.swing.JLabel macAddressLabel;
    private javax.swing.JLabel operationLabel;
    private javax.swing.JTextField paceOfPlayField;
    private javax.swing.JLabel paceOfPlayLabel;
    private javax.swing.JTextField playingHoleField;
    private javax.swing.JLabel playingHoleLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField statusUpdatedField;
    private javax.swing.JLabel statusUpdatedLabel;
    private javax.swing.JSeparator titleSeparator;
    // End of variables declaration//GEN-END:variables

    private class DocumentChangeListener implements DocumentListener {
        public void insertUpdate(DocumentEvent e) {
            setCartDefinitionChanged(true);
        }

        public void removeUpdate(DocumentEvent e) {
            setCartDefinitionChanged(true);
        }
        
        public void changedUpdate(DocumentEvent e) {
            setCartDefinitionChanged(true);
        }
    }
}
