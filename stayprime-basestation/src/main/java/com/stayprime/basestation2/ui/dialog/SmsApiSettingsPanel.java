/*
 * 
 */
package com.stayprime.basestation2.ui.dialog;

import com.ezware.dialog.task.TaskDialogs;
import com.stayprime.basestation2.Constant;
import com.stayprime.basestation2.services.CourseService;
import org.apache.commons.lang.StringUtils;
import org.jdesktop.application.Action;

/**
 *
 * @author benjamin
 */
public class SmsApiSettingsPanel extends javax.swing.JPanel {
    private CourseService courseService;

    /**
     * Creates new form SmsApiSettings
     */
    public SmsApiSettingsPanel() {
        initComponents();
    }

    public void setCourseService(CourseService courseService) {
        this.courseService = courseService;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        smsApiPanel = new org.jdesktop.swingx.JXPanel();
        smsApiSeparator = new com.stayprime.basestation2.ui.custom.JXTitledSeparator();
        jLabel8 = new javax.swing.JLabel();
        txtAPIKey = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtAPISecret = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        noteLabel = new org.jdesktop.swingx.JXLabel();

        setName("Form"); // NOI18N
        com.stayprime.ui.VerticalLayout2 verticalLayout21 = new com.stayprime.ui.VerticalLayout2();
        verticalLayout21.setAlignment(3);
        setLayout(verticalLayout21);

        smsApiPanel.setName("smsApiPanel"); // NOI18N
        smsApiPanel.setLayout(new java.awt.GridBagLayout());

        smsApiSeparator.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(SmsApiSettingsPanel.class);
        smsApiSeparator.setTitle(resourceMap.getString("smsApiSeparator.title")); // NOI18N
        smsApiSeparator.setToolTipText(resourceMap.getString("smsApiSeparator.toolTipText")); // NOI18N
        smsApiSeparator.setName("smsApiSeparator"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        smsApiPanel.add(smsApiSeparator, gridBagConstraints);

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        smsApiPanel.add(jLabel8, gridBagConstraints);

        txtAPIKey.setColumns(20);
        txtAPIKey.setToolTipText(resourceMap.getString("txtAPIKey.toolTipText")); // NOI18N
        txtAPIKey.setName("txtAPIKey"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        smsApiPanel.add(txtAPIKey, gridBagConstraints);

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        smsApiPanel.add(jLabel9, gridBagConstraints);

        txtAPISecret.setColumns(20);
        txtAPISecret.setToolTipText(resourceMap.getString("txtAPISecret.toolTipText")); // NOI18N
        txtAPISecret.setName("txtAPISecret"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        smsApiPanel.add(txtAPISecret, gridBagConstraints);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(SmsApiSettingsPanel.class, this);
        jButton1.setAction(actionMap.get("saveSettings")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        smsApiPanel.add(jButton1, gridBagConstraints);

        noteLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        noteLabel.setLineWrap(true);
        noteLabel.setText(resourceMap.getString("noteLabel.text")); // NOI18N
        noteLabel.setName("noteLabel"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        smsApiPanel.add(noteLabel, gridBagConstraints);

        add(smsApiPanel);
    }// </editor-fold>//GEN-END:initComponents

    @Action
    public void saveSettings() {
        String key = txtAPIKey.getText();
        String secret = txtAPISecret.getText();
        if (StringUtils.isBlank(key) || StringUtils.isBlank(secret)) {
            TaskDialogs.showException(new Exception("API credentials cannot be null"));
        }
        else {
            courseService.saveSetting(Constant.APIKey, key);
            courseService.saveSetting(Constant.APISecret, secret);
            noteLabel.setText("Settings saved successfully");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private org.jdesktop.swingx.JXLabel noteLabel;
    private org.jdesktop.swingx.JXPanel smsApiPanel;
    private org.jdesktop.swingx.JXTitledSeparator smsApiSeparator;
    private javax.swing.JTextField txtAPIKey;
    private javax.swing.JPasswordField txtAPISecret;
    // End of variables declaration//GEN-END:variables
}
