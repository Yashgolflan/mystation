package com.stayprime.hibernate.entities;
// Generated Sep 17, 2014 5:18:02 PM by Hibernate Tools 4.3.1

import com.stayprime.geo.BasicMapImage;
import com.stayprime.geo.Coordinates;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CourseInfo generated by hbm2java
 */
@Entity
@Table(name = "course_info")
public class CourseInfo implements java.io.Serializable {

    @Id @Column(unique = true, nullable = false)
    private int courseId;

    private int siteId;

    @Column(nullable = false)
    private String name;

    private String description;

    private String contactInfo;

    @Column(nullable = false)
    private int units;

    private String logoImage;

    private String mapImage;

    private String cornerTopLeft;

    private String cornerTopRight;

    private String cornerBottomLeft;

    private String cornerBottomRight;

    @Temporal(TemporalType.TIMESTAMP) @Column(nullable = false)
    private Date updated;

    public CourseInfo() {
    }

    public int getCourseId() {
        return courseId;
    }

    public void setCourseId(int courseId) {
        this.courseId = courseId;
    }

    public int getSiteId() {
        return siteId;
    }

    public void setSiteId(int siteId) {
        this.siteId = siteId;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getContactInfo() {
        return this.contactInfo;
    }

    public void setContactInfo(String contactInfo) {
        this.contactInfo = contactInfo;
    }

    public int getUnits() {
        return this.units;
    }

    public void setUnits(int units) {
        this.units = units;
    }

    public String getLogoImage() {
        return this.logoImage;
    }

    public void setLogoImage(String logoImage) {
        this.logoImage = logoImage;
    }

    public String getMapImage() {
        return this.mapImage;
    }

    public void setMapImage(String mapImage) {
        this.mapImage = mapImage;
    }

    public String getCornerTopLeft() {
        return this.cornerTopLeft;
    }

    public void setCornerTopLeft(String cornerTopLeft) {
        this.cornerTopLeft = cornerTopLeft;
    }

    public String getCornerTopRight() {
        return this.cornerTopRight;
    }

    public void setCornerTopRight(String cornerTopRight) {
        this.cornerTopRight = cornerTopRight;
    }

    public String getCornerBottomLeft() {
        return this.cornerBottomLeft;
    }

    public void setCornerBottomLeft(String cornerBottomLeft) {
        this.cornerBottomLeft = cornerBottomLeft;
    }

    public String getCornerBottomRight() {
        return this.cornerBottomRight;
    }

    public void setCornerBottomRight(String cornerBottomRight) {
        this.cornerBottomRight = cornerBottomRight;
    }

    public Date getUpdated() {
        return this.updated;
    }

    public void setUpdated(Date updated) {
        this.updated = updated;
    }

    public BasicMapImage getMap() {
        return new BasicMapImage(getMapImage(),
                Coordinates.fromString(getCornerTopLeft()),
                Coordinates.fromString(getCornerTopRight()),
                Coordinates.fromString(getCornerBottomLeft()),
                Coordinates.fromString(getCornerBottomRight())
        );
    }

    public void setMap(BasicMapImage map) {
        mapImage = map == null? null : map.getImageAddress();
        boolean invalid = map == null || !map.hasFourCornerCoordinates();
        cornerTopLeft = invalid? null : map.getTopLeft().toString();
        cornerTopRight = invalid? null : map.getTopRight().toString();
        cornerBottomLeft = invalid? null : map.getBottomLeft().toString();
        cornerBottomRight = invalid? null : map.getBottomRight().toString();
    }

}
