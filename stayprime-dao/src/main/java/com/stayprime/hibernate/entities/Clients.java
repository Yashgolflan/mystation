package com.stayprime.hibernate.entities;
// Generated Sep 17, 2014 5:18:02 PM by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Clients generated by hbm2java
 */
@Entity
@Table(name = "clients")
public class Clients implements java.io.Serializable {

    @Id
    @GeneratedValue(strategy = IDENTITY)
    private Integer clientId;

    @Column(nullable = false)
    private String name;

    private String details;

    private String contactInfo;

    private String email;

    private Integer reportPrefs = 0;

    private Boolean active = false;

    @Temporal(TemporalType.TIMESTAMP)
    private Date updated;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(nullable = false)
    private Date created;

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "clients", cascade = CascadeType.ALL, orphanRemoval = true)
    private Set<Ads> adses = new HashSet(0);

    public Clients() {
    }

    public Clients(String name, Date updated, Date created) {
        this.name = name;
        this.updated = updated;
        this.created = created;
    }

    public Clients(String name, String details, String contactInfo, String email, Integer reportPrefs, Boolean active, Date updated, Date created, Set adses) {
        this.name = name;
        this.details = details;
        this.contactInfo = contactInfo;
        this.email = email;
        this.reportPrefs = reportPrefs;
        this.active = active;
        this.updated = updated;
        this.created = created;
        this.adses = adses;
    }

    public Integer getClientId() {
        return this.clientId;
    }

    public void setClientId(Integer clientId) {
        this.clientId = clientId;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDetails() {
        return this.details;
    }

    public void setDetails(String details) {
        this.details = details;
    }

    public String getContactInfo() {
        return this.contactInfo;
    }

    public void setContactInfo(String contactInfo) {
        this.contactInfo = contactInfo;
    }

    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public Integer getReportPrefs() {
        return this.reportPrefs;
    }

    public void setReportPrefs(Integer reportPrefs) {
        this.reportPrefs = reportPrefs;
    }

    public Boolean getActive() {
        return this.active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    public Date getUpdated() {
        return this.updated;
    }

    public void setUpdated(Date updated) {
        this.updated = updated;
    }

    public Date getCreated() {
        return this.created;
    }

    public void setCreated(Date created) {
        this.created = created;
    }

    public Set<Ads> getAdses() {
        return this.adses;
    }

    public void setAdses(Set adses) {
        this.adses = adses;
    }

    public int getActiveAdsCount() {
        int activeCount = 0;

        for (Ads ad : getAdses()) {
            if (ad.isActive())
                activeCount++;
        }

        return activeCount;
    }

    public int getAdsCount() {
        return getAdses().size();
    }

    public static List<Ads> findActiveAds(List<Clients> list, Date date) {
        ArrayList<Ads> active = new ArrayList<Ads>();
        if (list != null) {
            for (Clients c : list) {
                Set<Ads> ads = c.getAdses();
                active.addAll(Ads.findActive(ads, date));
            }
        }
        return active;
    }

    public void setParents() {
        for (Ads a : adses) {
            a.setClients(this);
            a.setParents();
        }
    }

    public static void setParents(List<Clients> list) {
        if (list != null) {
            for(Clients c : list) {
                c.setParents();
            }
        }
    }
}
